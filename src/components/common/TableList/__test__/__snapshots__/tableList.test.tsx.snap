// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TableList Should render correctly snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="css-k87l54"
      >
        <div
          class="css-4k3q44"
        >
          <img
            alt="Don't make me think"
            data-nimg="1"
            decoding="async"
            height="75"
            loading="lazy"
            src="/_next/image?url=%2Fimg.jpg&w=256&q=75"
            srcset="/_next/image?url=%2Fimg.jpg&w=96&q=75 1x, /_next/image?url=%2Fimg.jpg&w=256&q=75 2x"
            style="color: transparent;"
            width="75"
          />
          <div
            class="css-j7qwjs"
          >
            <p
              class="chakra-text css-uewl2b"
            >
              Don’t Make Me think
            </p>
            <div
              class="css-1709kwd"
            >
              <p
                class="chakra-text css-0"
              >
                Steve Krug,
              </p>
              <p
                class="chakra-text css-0"
              >
                2000
              </p>
            </div>
            <p
              class="chakra-text css-0"
            >
              Second Edition
            </p>
          </div>
        </div>
        <div
          class="css-1sqgx2h"
        >
          <p
            class="chakra-text css-0"
          >
            4.5
            <span
              class="chakra-text css-c5z1pm"
            >
              /5
            </span>
          </p>
          <div
            class="css-iqbc30"
          >
            <p
              class="chakra-text css-0"
            >
              Computer Science
            </p>
            <p
              class="chakra-text css-0"
            >
              UX Design
            </p>
          </div>
        </div>
        <div
          class="css-1rb83ml"
        >
          <p
            class="chakra-text css-1619v3u"
          >
            In-Shelf
          </p>
        </div>
        <div
          class="css-1tcr18g"
        >
          <button
            aria-label="Heart icon"
            class="chakra-button css-38t1hi"
            type="button"
          >
            <svg
              aria-hidden="true"
              class="chakra-icon css-onkibi"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
              />
            </svg>
          </button>
          <button
            class="chakra-button css-4xx2wk"
            type="button"
          >
            Preview
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="css-k87l54"
    >
      <div
        class="css-4k3q44"
      >
        <img
          alt="Don't make me think"
          data-nimg="1"
          decoding="async"
          height="75"
          loading="lazy"
          src="/_next/image?url=%2Fimg.jpg&w=256&q=75"
          srcset="/_next/image?url=%2Fimg.jpg&w=96&q=75 1x, /_next/image?url=%2Fimg.jpg&w=256&q=75 2x"
          style="color: transparent;"
          width="75"
        />
        <div
          class="css-j7qwjs"
        >
          <p
            class="chakra-text css-uewl2b"
          >
            Don’t Make Me think
          </p>
          <div
            class="css-1709kwd"
          >
            <p
              class="chakra-text css-0"
            >
              Steve Krug,
            </p>
            <p
              class="chakra-text css-0"
            >
              2000
            </p>
          </div>
          <p
            class="chakra-text css-0"
          >
            Second Edition
          </p>
        </div>
      </div>
      <div
        class="css-1sqgx2h"
      >
        <p
          class="chakra-text css-0"
        >
          4.5
          <span
            class="chakra-text css-c5z1pm"
          >
            /5
          </span>
        </p>
        <div
          class="css-iqbc30"
        >
          <p
            class="chakra-text css-0"
          >
            Computer Science
          </p>
          <p
            class="chakra-text css-0"
          >
            UX Design
          </p>
        </div>
      </div>
      <div
        class="css-1rb83ml"
      >
        <p
          class="chakra-text css-1619v3u"
        >
          In-Shelf
        </p>
      </div>
      <div
        class="css-1tcr18g"
      >
        <button
          aria-label="Heart icon"
          class="chakra-button css-38t1hi"
          type="button"
        >
          <svg
            aria-hidden="true"
            class="chakra-icon css-onkibi"
            focusable="false"
            viewBox="0 0 24 24"
          >
            <path
              d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            />
          </svg>
        </button>
        <button
          class="chakra-button css-4xx2wk"
          type="button"
        >
          Preview
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
